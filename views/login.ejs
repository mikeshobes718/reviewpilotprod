<!-- views/login.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Log in • ReviewPilot</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
     <% include partials/header %>
    <style>
        :root { --brand: #5A67D8; --brand2:#805AD5; --border:#E2E8F0; --text:#1A202C; --muted:#4A5568; }
        * { box-sizing: border-box; }
         body { font-family: 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif; display: grid; place-content: center; min-height: 100vh; margin: 0; background: radial-gradient(1000px 600px at 10% -10%, rgba(90,103,216,.25), transparent), radial-gradient(1000px 800px at 110% -30%, rgba(128,90,213,.25), transparent), linear-gradient(135deg, var(--brand) 0%, var(--brand2) 100%); }
        .card { width: 360px; background: #fff; border: 1px solid var(--border); border-radius: 16px; box-shadow: 0 20px 25px -5px rgba(0,0,0,.1), 0 10px 10px -5px rgba(0,0,0,.04); padding: 24px; }
        .brand { display:flex; align-items:center; gap:10px; margin-bottom:10px; color: var(--text); }
        .badge { background: rgba(90,103,216,.12); color: var(--brand); padding: 6px 10px; border-radius: 999px; font-weight: 600; font-size: 12px; display:inline-block; }
        h1 { margin: 6px 0 2px; font-size: 20px; }
        p.sub { color: var(--muted); margin: 0 0 18px; font-size: 14px; }
        form { display:flex; flex-direction:column; gap: 12px; }
        label { font-size: 13px; color: var(--muted); font-weight: 600; }
        input { padding: 12px 14px; border: 1px solid var(--border); border-radius: 10px; font-size: 14px; }
        input:focus { outline: none; border-color: var(--brand); box-shadow: 0 0 0 3px rgba(90,103,216,.25); }
        .error { background:#FEF2F2; color:#991B1B; border:1px solid #FECACA; padding:10px 12px; border-radius: 10px; font-size: 14px; }
        button { padding: 12px 14px; background: var(--brand); color: #fff; border: none; border-radius: 10px; font-weight: 700; cursor: pointer; }
        button:hover { background: #4C51BF; }
        .row { display:flex; justify-content: space-between; align-items:center; font-size: 14px; }
        a { color: var(--brand); text-decoration: none; }
        .foot { text-align:center; margin-top:12px; color:#f8fafc; font-size: 14px; }
    </style>
  </head>
  <body>
    <div class="card">
      <div class="brand">
        <div class="badge">ReviewPilot</div>
      </div>
      <h1>Welcome back</h1>
      <p class="sub">Log in to your dashboard</p>
      <% if (typeof error !== 'undefined' && error) { %>
        <div class="error"><%= error %></div>
      <% } %>
      <form id="login-form" action="/login" method="POST">
        <input type="hidden" name="_csrf" value="<%= (typeof csrfToken !== 'undefined' ? csrfToken : '') %>">
        <div>
          <label>Email</label>
          <input id="email" type="email" name="email" placeholder="you@business.com" required>
        </div>
        <div>
          <label>Password</label>
          <input id="password" type="password" name="password" placeholder="••••••••" required>
        </div>
        <div class="row">
          <a href="/reset-password">Forgot password?</a>
        </div>
        <button id="login-btn" type="submit">Log in</button>
      </form>
      <div class="row" style="margin-top:10px;">
        <span>New here?</span> <a href="/signup">Create an account</a>
      </div>
    </div>
    <% include partials/footer %>
    <script>
      // Progressive enhancement: if Firebase API key provided, do client login for clearer errors
      (function(){
        const apiKey = '<%= typeof firebaseApiKey !== 'undefined' ? firebaseApiKey : '' %>';
        if (!apiKey) return;
        const form = document.getElementById('login-form');
        const email = document.getElementById('email');
        const password = document.getElementById('password');
        const btn = document.getElementById('login-btn');
        form.addEventListener('submit', async function(e){
          e.preventDefault();
          btn.disabled = true; btn.textContent = 'Checking...';
          try {
            const resp = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + apiKey, {
              method: 'POST', headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email: email.value, password: password.value, returnSecureToken: true })
            });
            if (!resp.ok) {
              const body = await resp.json().catch(()=>({}));
              const code = (body && body.error && body.error.message) || '';
              let msg = 'Invalid credentials';
              if (code.includes('EMAIL_NOT_FOUND')) msg = 'No account found for that email.';
              if (code.includes('INVALID_PASSWORD')) msg = 'Incorrect password.';
              throw new Error(msg);
            }
            const data = await resp.json();
            const token = data.idToken;
            const csrf = '<%= (typeof csrfToken !== 'undefined' ? csrfToken : '') %>';
            const sres = await fetch('/session-login', {
              method: 'POST', headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ idToken: token, _csrf: csrf })
            });
            if (!sres.ok) throw new Error('Could not start session');
            window.location.href = '/dashboard';
          } catch(err) {
            const errBox = document.querySelector('.error');
            if (errBox) { errBox.textContent = err.message; errBox.style.display = 'block'; }
            else {
              const div = document.createElement('div');
              div.className = 'error';
              div.textContent = err.message;
              form.parentNode.insertBefore(div, form);
            }
            btn.disabled = false; btn.textContent = 'Log in';
          }
        });
      })();
    </script>
  </body>
</html>
