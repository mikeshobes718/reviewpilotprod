<nav class="nav" style="background: transparent;">
  <a href="/" class="logo" style="text-decoration:none;color:inherit">
    <img src="/logo.svg" alt="RM" class="brand-mark" style="height:32px;width:auto" />
    <span class="brand-text">Reviews &amp; Marketing</span>
  </a>
  <button id="menu-toggle" class="menu-toggle" aria-label="Open menu" aria-expanded="false">
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 6h16M4 12h16M4 18h16" stroke="currentColor" stroke-width="2" stroke-linecap="round"/></svg>
  </button>
  <div id="nav-links" class="nav-links">
    <a href="/features" class="btn">Features</a>
    <a href="/pricing" class="btn">Pricing</a>
    <a href="/#how-it-works" class="btn">How It Works</a>
    <% if (typeof user !== 'undefined' && user) { %>
      <!-- Show dashboard button for ALL logged-in users, but popup will intercept clicks for non-subscribers -->
      <a href="/dashboard" class="btn dashboard-btn">Dashboard</a>
      <span class="btn" style="cursor:default;opacity:.85;">Signed in: <%= user.email %></span>
      <a href="/logout" class="btn">Log out</a>
    <% } else { %>
      <a href="/login" class="btn">Log In</a>
      <a href="/signup" class="btn primary">Get started</a>
    <% } %>
  </div>
</nav>

<!-- Subscription Required Popup Modal -->
<div id="subscription-required-popup" class="popup-overlay" style="
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  z-index: 10000;
  align-items: center;
  justify-content: center;
">
  <div class="popup-content" style="
    background: white;
    border-radius: 12px;
    padding: 32px;
    max-width: 500px;
    width: 90%;
    text-align: center;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  ">
    <div class="popup-icon" style="
      font-size: 48px;
      margin-bottom: 16px;
    ">ðŸ”’</div>
    
    <h2 class="popup-title" style="
      font-size: 24px;
      font-weight: 700;
      margin: 0 0 16px 0;
      color: #1f2937;
    ">Subscription Required</h2>
    
    <p class="popup-message" style="
      font-size: 16px;
      line-height: 1.6;
      color: #6b7280;
      margin: 0 0 24px 0;
    ">You need an active subscription to access the dashboard. Choose a plan to get started with managing your reviews and analytics.</p>
    
    <div class="popup-actions" style="
      display: flex;
      gap: 12px;
      justify-content: center;
      flex-wrap: wrap;
    ">
      <button id="popup-view-plans" class="popup-btn primary" style="
        background: #10b981;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        font-size: 16px;
      ">View Plans</button>
      
      <button id="popup-close" class="popup-btn secondary" style="
        background: #f3f4f6;
        color: #374151;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        font-size: 16px;
      ">Close</button>
    </div>
  </div>
</div>

<!-- User Subscription Status (for JavaScript) -->
<script>
// Set user subscription status for JavaScript access
window.userSubscriptionStatus = '<%= typeof subscriptionStatus !== "undefined" ? subscriptionStatus : "none" %>';
window.userTrialEndsAt = '<%= typeof trialEndsAt !== "undefined" ? trialEndsAt : "" %>';
console.log('ðŸ”’ User subscription status:', window.userSubscriptionStatus);
console.log('ðŸ”’ User trial ends at:', window.userTrialEndsAt);
</script>

<!-- Popup JavaScript -->
<script>
(function() {
  'use strict';
  
  // Wait for DOM to be ready
  function initPopup() {
    const popup = document.getElementById('subscription-required-popup');
    if (!popup) return;
    
    const viewPlansBtn = document.getElementById('popup-view-plans');
    const closeBtn = document.getElementById('popup-close');
    
    // View plans button
    if (viewPlansBtn) {
      viewPlansBtn.addEventListener('click', () => {
        window.location.href = '/pricing';
      });
    }
    
    // Close button
    if (closeBtn) {
      closeBtn.addEventListener('click', () => {
        popup.style.display = 'none';
      });
    }
    
    // Close on overlay click
    popup.addEventListener('click', (e) => {
      if (e.target === popup) {
        popup.style.display = 'none';
      }
    });
    
    // Close on Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && popup.style.display === 'flex') {
        popup.style.display = 'none';
      }
    });
    
    // Intercept dashboard button clicks
    function interceptDashboardClicks() {
      const dashboardElements = document.querySelectorAll('a[href*="dashboard"], button[onclick*="dashboard"], .dashboard-link, .dashboard-button, [href="/dashboard"], .dashboard-btn');
      
      dashboardElements.forEach(element => {
        // Remove existing event listeners by cloning the element
        const newElement = element.cloneNode(true);
        element.parentNode.replaceChild(newElement, element);
        
        // Add new click handler
        newElement.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          // Check if user has active subscription (this will be set by server)
          const hasActiveSubscription = window.userSubscriptionStatus === 'active' || 
                                     (window.userSubscriptionStatus === 'trial' && 
                                      window.userTrialEndsAt && 
                                      new Date(window.userTrialEndsAt) > new Date());
          
          if (!hasActiveSubscription) {
            console.log('ðŸ”’ Dashboard access blocked - showing subscription popup');
            popup.style.display = 'flex';
          } else {
            console.log('âœ… User has active subscription - allowing dashboard access');
            window.location.href = '/dashboard';
          }
          
          return false;
        });
      });
      
      return dashboardElements.length;
    }
    
    // Initial interception
    const interceptedCount = interceptDashboardClicks();
    console.log(`ðŸ”’ Intercepted ${interceptedCount} dashboard elements`);
    
    // Set up observer for new dashboard elements
    const observer = new MutationObserver((mutations) => {
      let newElementsFound = false;
      
      mutations.forEach((mutation) => {
        if (mutation.type === 'childList') {
          mutation.addedNodes.forEach((node) => {
            if (node.nodeType === Node.ELEMENT_NODE) {
              // Check if the new element is a dashboard element
              if (node.matches && (node.matches('a[href*="dashboard"]') || 
                  node.matches('button[onclick*="dashboard"]') || 
                  node.matches('.dashboard-link') || 
                  node.matches('.dashboard-button') || 
                  node.matches('[href="/dashboard"]'))) {
                newElementsFound = true;
              }
              
              // Check if the new element contains dashboard elements
              const dashboardElements = node.querySelectorAll ? 
                node.querySelectorAll('a[href*="dashboard"], button[onclick*="dashboard"], .dashboard-link, .dashboard-button, [href="/dashboard"]') : [];
              
              if (dashboardElements.length > 0) {
                newElementsFound = true;
              }
            }
          });
        }
      });
      
      // If new dashboard elements were found, intercept them
      if (newElementsFound) {
        setTimeout(() => {
          const newInterceptedCount = interceptDashboardClicks();
          if (newInterceptedCount > 0) {
            console.log(`ðŸ”’ Intercepted ${newInterceptedCount} new dashboard elements`);
          }
        }, 100);
      }
    });
    
    // Start observing
    observer.observe(document.body, {
      childList: true,
      subtree: true
    });
    
    console.log('ðŸ”’ Subscription popup system initialized');
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPopup);
  } else {
    initPopup();
  }
})();
</script>

<!-- Mobile drawer -->
<div class="drawer-overlay" id="drawerOverlay">
  <div class="drawer base-card" id="drawer">
    <div class="drawer-header">
      <img src="/logo.svg" alt="Reviews &amp; Marketing" style="height:28px;width:auto" />
      <button class="drawer-close" id="drawerClose" aria-label="Close menu">âœ•</button>
    </div>
    <div class="drawer-body">
      <nav style="display:grid;gap:12px">
        <a href="/features" class="btn" style="border:none;background:transparent;color:var(--text);font-weight:600;font-size:18px;justify-content:flex-start">Features</a>
        <a href="/pricing" class="btn" style="border:none;background:transparent;color:var(--text);font-weight:600;font-size:18px;justify-content:flex-start">Pricing</a>
        <a href="/#how-it-works" class="btn mobile-nav-link" style="border:none;background:transparent;color:var(--text);font-weight:600;font-size:18px;justify-content:flex-start">How it works</a>
      </nav>
    </div>
    <div class="drawer-footer" style="margin-top:auto;padding:16px;border-top:1px solid var(--border);display:grid;gap:10px">
      <% if (typeof user !== 'undefined' && user) { %>
        <!-- Show dashboard button for all logged-in users, but popup will intercept clicks for non-subscribers -->
        <a href="/dashboard" class="btn dashboard-btn-mobile" style="justify-content:center">Dashboard</a>
        <span class="btn" style="cursor:default;opacity:.85;justify-content:center;border:none;background:transparent;color:var(--text);font-weight:600;font-size:16px;">Signed in: <%= user.email %></span>
        <a href="/logout" class="btn" style="justify-content:center">Log out</a>
      <% } else { %>
        <a href="/login" class="btn" style="justify-content:center">Log in</a>
        <a href="/signup" class="btn primary" style="justify-content:center">Get started</a>
      <% } %>
    </div>
  </div>
</div>

<!-- Mobile Subscription Required Popup Modal -->
<div id="mobile-subscription-required-popup" class="mobile-popup-overlay" style="
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  z-index: 10000;
  align-items: center;
  justify-content: center;
">
  <div class="mobile-popup-content" style="
    background: white;
    border-radius: 12px;
    padding: 24px;
    max-width: 90%;
    width: 90%;
    text-align: center;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    margin: 20px;
  ">
    <div class="mobile-popup-icon" style="
      font-size: 36px;
      margin-bottom: 12px;
    ">ðŸ”’</div>
    
    <h2 class="mobile-popup-title" style="
      font-size: 20px;
      font-weight: 700;
      margin: 0 0 12px 0;
      color: #1f2937;
    ">Subscription Required</h2>
    
    <p class="mobile-popup-message" style="
      font-size: 14px;
      line-height: 1.5;
      color: #6b7280;
      margin: 0 0 20px 0;
    ">You need an active subscription to access the dashboard. Choose a plan to get started.</p>
    
    <div class="mobile-popup-actions" style="
      display: flex;
      flex-direction: column;
      gap: 8px;
      align-items: center;
    ">
      <button id="mobile-popup-view-plans" class="mobile-popup-btn primary" style="
        background: #10b981;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        font-size: 16px;
        width: 100%;
        max-width: 200px;
      ">View Plans</button>
      
      <button id="mobile-popup-close" class="mobile-popup-btn secondary" style="
        background: #f3f4f6;
        color: #374151;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        font-size: 16px;
        width: 100%;
        max-width: 200px;
      ">Close</button>
    </div>
  </div>
</div>

<!-- Mobile Popup JavaScript -->
<script>
(function() {
  'use strict';
  
  // Wait for DOM to be ready
  function initMobilePopup() {
    const popup = document.getElementById('mobile-subscription-required-popup');
    if (!popup) return;
    
    const viewPlansBtn = document.getElementById('mobile-popup-view-plans');
    const closeBtn = document.getElementById('mobile-popup-close');
    
    // View plans button
    if (viewPlansBtn) {
      viewPlansBtn.addEventListener('click', () => {
        window.location.href = '/pricing';
      });
    }
    
    // Close button
    if (closeBtn) {
      closeBtn.addEventListener('click', () => {
        popup.style.display = 'none';
      });
    }
    
    // Close on overlay click
    popup.addEventListener('click', (e) => {
      if (e.target === popup) {
        popup.style.display = 'none';
      }
    });
    
    // Close on Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && popup.style.display === 'flex') {
        popup.style.display = 'none';
      }
    });
    
    // Intercept mobile dashboard button clicks
    function interceptMobileDashboardClicks() {
      const mobileDashboardElements = document.querySelectorAll('.dashboard-btn-mobile, a[href="/dashboard"]');
      
      mobileDashboardElements.forEach(element => {
        // Remove existing event listeners by cloning the element
        const newElement = element.cloneNode(true);
        element.parentNode.replaceChild(newElement, element);
        
        // Add new click handler
        newElement.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          // Check if user has active subscription (this will be set by server)
          const hasActiveSubscription = window.userSubscriptionStatus === 'active' || 
                                     (window.userSubscriptionStatus === 'trial' && 
                                      window.userTrialEndsAt && 
                                      new Date(window.userTrialEndsAt) > new Date());
          
          if (!hasActiveSubscription) {
            console.log('ðŸ”’ Mobile dashboard access blocked - showing subscription popup');
            popup.style.display = 'flex';
          } else {
            console.log('âœ… User has active subscription - allowing dashboard access');
            window.location.href = '/dashboard';
          }
          
          return false;
        });
      });
      
      return mobileDashboardElements.length;
    }
    
    // Initial interception
    const interceptedCount = interceptMobileDashboardClicks();
    console.log(`ðŸ”’ Intercepted ${interceptedCount} mobile dashboard elements`);
    
    console.log('ðŸ”’ Mobile subscription popup system initialized');
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobilePopup);
  } else {
    initMobilePopup();
  }
})();
</script>

